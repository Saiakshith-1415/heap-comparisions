#include <stdio.h>
#define MAX 100

int heap[MAX];
int size = 0;

void swap(int *a, int *b) {
    int temp = *a; *a = *b; *b = temp;
}

void insert(int val) {
    heap[++size] = val;
    int i = size;
    while (i > 1 && heap[i/2] > heap[i]) {
        swap(&heap[i], &heap[i/2]);
        i /= 2;
    }
}

int extractMin() {
    if (size == 0) return -1;
    int min = heap[1];
    heap[1] = heap[size--];
    int i = 1, left, right, smallest;
    while (1) {
        left = 2*i; right = 2*i + 1; smallest = i;
        if (left <= size && heap[left] < heap[smallest]) smallest = left;
        if (right <= size && heap[right] < heap[smallest]) smallest = right;
        if (smallest != i) {
            swap(&heap[i], &heap[smallest]);
            i = smallest;
        } else break;
    }
    return min;
}

int findMin() {
    if (size == 0) return -1;
    return heap[1];
}

int findMax() {
    if (size == 0) return -1;
    int max = heap[1];
    for (int i = 2; i <= size; i++)
        if (heap[i] > max) max = heap[i];
    return max;
}

void display() {
    for (int i = 1; i <= size; i++) printf("%d ", heap[i]);
    printf("\n");
}

int main() {
    int choice, val;
    while (1) {
        printf("\n--- Binary Heap Menu ---\n");
        printf("1. Insert\n2. Delete Min\n3. Find Min\n4. Find Max\n5. Display\n6. Exit\n");
        printf("Enter choice: "); scanf("%d", &choice);
        switch (choice) {
            case 1: printf("Enter value: "); scanf("%d", &val); insert(val); break;
            case 2: printf("Deleted Min: %d\n", extractMin()); break;
            case 3: printf("Min: %d\n", findMin()); break;
            case 4: printf("Max: %d\n", findMax()); break;
            case 5: display(); break;
            case 6: return 0;
            default: printf("Invalid choice\n");
        }
    }
}
